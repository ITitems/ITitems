<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AssetInfoDAO">
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoList">
		<result property="rum" column="RUM" />
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="histQty" column="HIST_QTY" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="usageStatus" column="USAGE_STAUTS" />
	</resultMap>

	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoDetail">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="addAsset" column="ADD_ASSET" />
		<result property="note" column="NOTE" />
		<result property="photoId" column="PHOTO_ID" />
		<result property="regId" column="REG_ID" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
	</resultMap>

	<sql id="search">
		<where>
			<if test="searchOrgnzt != null and searchOrgnzt != ''">
				AND A.ORGNZT_ID = #{searchOrgnzt}
			</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND A.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND B.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND B.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND A.HIST_STATUS = #{searchStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND B.REG_DATE >= STR_TO_DATE(#{startDate},
				'%Y%m%d%H%i%s')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND B.REG_DATE <= STR_TO_DATE(#{endDate}, '%Y%m%d%H%i%s')
				]]>
			</if>
			<if test="searchWord != null and searchWord != ''">
				AND B.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%')
			</if>
		</where>
	</sql>

	<select id="SelectAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoList">
		
	    SELECT RUM,
	    	   ASSET_ID,
	    	   LARGE_CATEGORY, 
	    	   MIDDLE_CATEGORY, 
	    	   ASSET_NAME, 
	    	   HIST_QTY, 
	    	   ACQUIRED_DATE,
	    	   ACQUIRED_PRICE,
	    	   MAKER,
	    	   USAGE_STAUTS
	      FROM (
		        SELECT 
		            ROW_NUMBER() OVER(ORDER BY A.HIST_DATE DESC)AS RUM, 
		            B.ASSET_ID,
		            (SELECT CAT_NAME FROM CATEGORY WHERE CAT_ID = B.LARGE_CATEGORY) AS LARGE_CATEGORY,
		            (SELECT CAT_NAME FROM CATEGORY WHERE CAT_ID = B.MIDDLE_CATEGORY) AS MIDDLE_CATEGORY,
		            B.ASSET_NAME,
		            A.HIST_QTY,
		            DATE_FORMAT(B.ACQUIRED_DATE,'%Y-%m-%d')AS ACQUIRED_DATE,
		            B.ACQUIRED_PRICE,
		            B.MAKER,
		            C.CODE_NM AS USAGE_STAUTS
		          FROM ASSETSHIST A
		          LEFT OUTER JOIN ASSETSINFO B
		            ON A.ASSET_ID = B.ASSET_ID
		          LEFT OUTER JOIN LETTCCMMNDETAILCODE C
		            ON B.USAGE_STAUTS = C.CODE
		        <include refid="search" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="int">
		SELECT 
			COUNT(a.HIST_ID)
		  FROM ASSETSHIST a
 		  LEFT OUTER JOIN ASSETSINFO b
		    on a.ASSET_ID = b.ASSET_ID
		<include refid="search" />
	</select>

	<select id="SelectAssetInfoVO"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoDetail">
		SELECT 
		    ASSET_ID, 
		    (SELECT CAT_NAME FROM category WHERE CAT_ID = LARGE_CATEGORY) AS LARGE_CATEGORY,
		    (SELECT CAT_NAME FROM category WHERE CAT_ID = MIDDLE_CATEGORY) AS MIDDLE_CATEGORY, 
		    ASSET_NAME,
		    ASSET_QTY,
		    ACQUIRED_PRICE, 
		    MAKER, 
		    ADD_ASSET, 
		    NOTE, 
		    PHOTO_ID, 
		    REG_ID,
		    DATE_FORMAT(ACQUIRED_DATE,'%Y-%m-%d')AS ACQUIRED_DATE
		FROM ASSETSINFO
		WHERE ASSET_ID = #{assetId}
	</select>

	<insert id="InsertAssetInfo"
		parameterType="egovframework.let.ass.service.AssetInfoVO">
	
		INSERT INTO ASSETSINFO (
		    ASSET_ID, 
		    LARGE_CATEGORY, 
		    MIDDLE_CATEGORY, 
		    ASSET_NAME, 
		    ASSET_QTY, 
		    ACQUIRED_DATE, 
		    ACQUIRED_PRICE, 
		    MAKER, 
		    NOTE, 
		    REG_ID, 
		    REG_DATE, 
		    USAGE_STAUTS, 
		    ADD_ASSET, 
		    PHOTO_ID)
		VALUES (
		    #{assetId},
		    #{largeCategory},
		    #{middleCategory}, 
		    #{assetName}, 
		    #{assetQty},
		    DATE_FORMAT(#{acquiredDate}, '%Y-%m-%d'), 
		    #{acquiredPrice},
		    #{maker},
		    #{note}, 
		    #{regId},
		    DATE_FORMAT(CURRENT_DATE, '%Y-%m-%d %H:%i:%s'),
		    #{usageStatus}, 
		    #{addAsset}, 
		    #{photoId} )
	</insert>

	<update id="UpdateAssetInfo">

	</update>
</mapper>