<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AssetInfoDAO">
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoList">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="orgnztId" column="ORGNZT_ID" />
		<result property="lowerOrgnztId" column="LOWER_ORGNZT_ID" />
		<result property="prjId" column="PRJ_ID" />
		<result property="regDate" column="REG_DATE" />
		<result property="usageStatus" column="USAGE_STAUTS" />
		<result property="useNm" column="USE_NM" />
		<result property="rcptNm" column="RCPT_NM" />
	</resultMap>
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="myAssetList">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="prjId" column="PRJ_ID" />
		<result property="regDate" column="REG_DATE" />
		<result property="usageStatus" column="USAGE_STAUTS" />
		<result property="useNm" column="USE_NM" />
		<result property="rcptNm" column="RCPT_NM" />
	</resultMap>
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoDetail">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="mcatNm" column="MCAT_NM" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="makerCode" column="MAKER_CODE" />
		<result property="note" column="NOTE" />
		<result property="regDate" column="REG_DATE" />
		<result property="regId" column="REG_ID" />
		<result property="assetSn" column="ASSET_SN" />
		<result property="orgnztId" column="ORGNZT_ID" />
		<result property="prjId" column="PRJ_ID" />
		<result property="prjNm" column="PRJ_NM" />
		<result property="useId" column="USE_ID" />
		<result property="useNm" column="USE_NM" />
		<result property="rcptDate" column="RCPT_DATE" />
		<result property="rcptId" column="RCPT_ID" />
		<result property="rcptNm" column="RCPT_NM" />
		<result property="mngNum" column="MNG_NUM" />
	</resultMap>
	
	<sql id="search">
		<where>
		 	AND A.USAGE_STAUTS = 'U1'
		 	<if test="searchOrgnzt != null and searchOrgnzt != ''">
              	AND (	B.ORGNZT_ID = #{searchOrgnzt} 
              		OR  F.ORGNZT_UP = #{searchOrgnzt})
            </if>
            <if test="userId != null and userId != ''">
				AND (	B.RCPT_ID = #{userId} 
					OR  B.USE_ID = #{userId})
            </if>
        	<if test="lowerOrgnzt != null and lowerOrgnzt != ''">
				AND B.ORGNZT_ID = #{lowerOrgnzt}
			</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND B.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND B.HIST_GROUP = #{searchStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') >= STR_TO_DATE(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
			<if test="searchWord != null and searchWord != ''">
				AND (A.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%')
				OR I.USER_NM LIKE CONCAT ('%', #{searchWord},'%')
				OR J.USER_NM LIKE CONCAT ('%', #{searchWord},'%'))
			</if>
		</where>
	</sql>

	<sql id="mySearch">
		<where>
			AND A.USAGE_STAUTS = 'U1' 
			AND (	B.USE_ID = #{userId} 
				OR  B.RCPT_ID = #{userId})
		 	<if test="searchWord != null and searchWord != ''">
				AND (	A.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%') 
					OR  A.ASSET_SN LIKE CONCAT ('%', #{searchWord},'%'))
		 	</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND B.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="startDate != null and startDate != ''">
				AND A.REG_DATE >= STR_TO_DATE(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
		</where>
	</sql>

	<select id="SelectAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoList">
		
	    SELECT 
	    	   ASSET_ID,
	    	   LARGE_CATEGORY, 
	    	   MIDDLE_CATEGORY,
	    	   ASSET_QTY, 
	    	   ORGNZT_ID,
	    	   LOWER_ORGNZT_ID,
	    	   PRJ_ID,
	    	   REG_DATE,
	    	   USAGE_STAUTS,
	    	   MAKER,
	    	   USE_NM,
	    	   RCPT_NM,
	    	   ASSET_SN
	      FROM (
		        SELECT 
					ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC)AS RUM,
					A.ASSET_ID,
					C.CAT_NAME AS LARGE_CATEGORY, 
					CASE 
						WHEN D.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
						THEN A.MCAT_ETC
						ELSE D.CAT_NAME
					END AS MIDDLE_CATEGORY,
					A.ASSET_QTY,
					CASE
						WHEN F.ORGNZT_UP IS NULL
						THEN F.ORGNZT_NM
						ELSE G.ORGNZT_NM
					 END AS ORGNZT_ID,
					CASE 
						WHEN F.ORGNZT_UP IS NULL
						THEN NULL
						ELSE F.ORGNZT_NM
					 END AS LOWER_ORGNZT_ID,
	    	   		H.PRJ_NAME AS PRJ_ID,
					DATE_FORMAT(A.REG_DATE,'%Y-%m-%d') AS REG_DATE, 
					E.CODE_NM AS USAGE_STAUTS,
					A.MAKER AS MAKER,
					I.USER_NM AS USE_NM,
					J.USER_NM AS RCPT_NM,
					A.ASSET_SN AS ASSET_SN
				  FROM ASSETSINFO A 
	   LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
	   LEFT OUTER JOIN CATEGORY C
				    ON A.LARGE_CATEGORY = C.CAT_ID
	   LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
	   LEFT OUTER JOIN LETTCCMMNDETAILCODE E
				    ON A.USAGE_STAUTS = E.CODE
	   LEFT OUTER JOIN LETTNORGNZTINFO F
	   				ON B.ORGNZT_ID = F.ORGNZT_ID
	   LEFT OUTER JOIN LETTNORGNZTINFO G
	   				ON F.ORGNZT_UP = G.ORGNZT_ID
	   LEFT OUTER JOIN PROJECTS H
	   				ON B.PRJ_ID = H.PRJ_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO I
	                ON B.USE_ID = I.ESNTL_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO J
	                ON B.RCPT_ID = J.ESNTL_ID  
	             <include refid="search" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="int">
				SELECT COUNT(A.ASSET_ID)
				  FROM ASSETSINFO A
	   LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
	   LEFT OUTER JOIN LETTNORGNZTINFO F
			   		ON B.ORGNZT_ID = F.ORGNZT_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO I
	                ON B.USE_ID = I.ESNTL_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO J
	                ON B.RCPT_ID = J.ESNTL_ID  
				 <include refid="search" />
	</select>
	
	<select id="SelectMyAssetInfoList" parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="myAssetList">
		
	    SELECT 
	    	   ASSET_ID,
	    	   LARGE_CATEGORY, 
	    	   MIDDLE_CATEGORY, 
	    	   ASSET_NAME, 
	    	   ASSET_QTY,
	    	   ASSET_SN,
	    	   PRJ_ID,
	    	   REG_DATE,
	    	   USAGE_STAUTS,
	    	   USE_NM,
	    	   RCPT_NM
	      FROM (
		        SELECT 
					ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC)AS RUM,
					A.ASSET_ID,
					C.CAT_NAME AS LARGE_CATEGORY, 
					CASE 
						WHEN D.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
						THEN A.MCAT_ETC
						ELSE D.CAT_NAME
					END AS MIDDLE_CATEGORY,
					A.ASSET_NAME,
					A.ASSET_QTY,
					A.ASSET_SN,
					G.PRJ_NAME AS PRJ_ID,
					DATE_FORMAT(A.REG_DATE,'%Y-%m-%d') AS REG_DATE, 
					E.CODE_NM AS USAGE_STAUTS,
					H.USER_NM AS USE_NM,
					I.USER_NM AS RCPT_NM
				  FROM ASSETSINFO A
	   LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
	   LEFT OUTER JOIN CATEGORY C
				    ON A.LARGE_CATEGORY = C.CAT_ID
	   LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
	   LEFT OUTER JOIN LETTCCMMNDETAILCODE E
				    ON A.USAGE_STAUTS = E.CODE
	   LEFT OUTER JOIN LETTCCMMNDETAILCODE F
				    ON B.APPROVAL = F.CODE
	   LEFT OUTER JOIN PROJECTS G
				    ON B.PRJ_ID = G.PRJ_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO H
	                ON B.USE_ID = H.ESNTL_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO I
	                ON B.RCPT_ID = I.ESNTL_ID 
				 	<include refid="mySearch" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountMyAssetInfoList" parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="int">
			SELECT 
				COUNT(A.ASSET_ID)
			  FROM ASSETSINFO A
   LEFT OUTER JOIN ASSETSHIST B
			    ON A.ASSET_ID = B.ASSET_ID
		 		<include refid="mySearch" />
	</select>

	<select id="SelectAssetInfoVO"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoDetail">
			SELECT 
				A.ASSET_ID,
				C.CAT_NAME AS LARGE_CATEGORY, 
				A.MIDDLE_CATEGORY,
				CASE 
					WHEN D.CAT_NAME = '기타' AND A.MCAT_ETC IS NOT NULL
					THEN A.MCAT_ETC
					ELSE D.CAT_NAME
				END AS MCAT_NM,
				A.MCAT_ETC,
				A.ASSET_NAME,
				A.ASSET_QTY,
				DATE_FORMAT(A.ACQUIRED_DATE,'%Y-%m-%d') AS ACQUIRED_DATE,
				A.ACQUIRED_PRICE,
				A.MAKER_CODE,
				CASE 
					WHEN J.CODE_NM = '기타'
					THEN A.MAKER
					ELSE J.CODE_NM  
				END AS MAKER,
				A.NOTE,
				DATE_FORMAT(A.REG_DATE,'%Y-%m-%d') AS REG_DATE,
				A.ASSET_SN,
				G.ORGNZT_NM AS ORGNZT_ID,
				B.PRJ_ID,
				H.PRJ_NAME AS PRJ_NM,
				B.USE_ID,
				E.USER_NM AS USE_NM,
				DATE_FORMAT(B.RCPT_DATE,'%Y-%m-%d') AS RCPT_DATE,
				B.RCPT_ID,
				I.USER_NM AS REG_ID,
				F.USER_NM AS RCPT_NM,
				A.MNG_NUM
			  FROM ASSETSINFO A
   LEFT OUTER JOIN ASSETSHIST B
			    ON A.ASSET_ID = B.ASSET_ID
   LEFT OUTER JOIN CATEGORY C
		    	ON A.LARGE_CATEGORY = C.CAT_ID
   LEFT OUTER JOIN CATEGORY D
			    ON A.MIDDLE_CATEGORY = D.CAT_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO E
		        ON B.USE_ID = E.ESNTL_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO F
		        ON B.RCPT_ID = F.ESNTL_ID  
   LEFT OUTER JOIN LETTNORGNZTINFO G
		        ON B.ORGNZT_ID = G.ORGNZT_ID
   LEFT OUTER JOIN PROJECTS H
		        ON B.PRJ_ID = H.PRJ_ID
   LEFT OUTER JOIN LETTNEMPLYRINFO I
		        ON A.REG_ID = I.ESNTL_ID 
   LEFT OUTER JOIN LETTCCMMNDETAILCODE J
		        ON A.MAKER_CODE = J.CODE 
			 WHERE A.ASSET_ID = #{assetId}
	</select>

	<insert id="InsertAssetInfo"
		parameterType="egovframework.let.ass.service.AssetInfoVO">
	
		INSERT INTO ASSETSINFO (
		    ASSET_ID, 
		    LARGE_CATEGORY, 
		    MIDDLE_CATEGORY,
		    MCAT_ETC, 
		    ASSET_QTY,
		    ASSET_NAME,
		    ASSET_SN,
		    MAKER_CODE,
		    MAKER, 
		    NOTE,
		    ACQUIRED_DATE, 
		    ACQUIRED_PRICE, 
		    REG_ID, 
		    REG_DATE, 
		    USAGE_STAUTS
		    )
		VALUES (
		    #{assetId},
		    #{largeCategory},
		    #{middleCategory}, 
		    #{mcatEtc},
		    #{assetQty},
		    #{assetName},
		    #{assetSn},
		    #{makerCode},
		    #{maker},
		    #{note},
		    NULL,
		    '',
		    #{regId},
		    DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
		    #{usageStatus}
		     )
	</insert>

	<update id="UpdateAssetInfo" parameterType="egovframework.let.ass.service.AssetInfoVO">
		UPDATE 
			ASSETSINFO
		   SET 
		    LARGE_CATEGORY = #{largeCategory}, 
		    MIDDLE_CATEGORY = #{middleCategory}, 
		    MCAT_ETC = #{mcatEtc}, 
		    ASSET_QTY = #{assetQty}, 
		    ASSET_NAME = #{assetName},
		    ASSET_SN = #{assetSn},
		    MAKER_CODE = #{makerCode},
		    MAKER = #{maker},  
		    NOTE = #{note},
		    <if test="acquiredDate != null and acquiredDate != ''">
		    ACQUIRED_DATE = STR_TO_DATE(#{acquiredDate}, '%Y-%m-%d'), 
		    </if>
		    ACQUIRED_PRICE = #{acquiredPrice},
		    MNG_NUM = #{mngNum}
		 WHERE ASSET_ID = #{assetId}
	</update>
	 
	<update id="deleteAssetInfo" parameterType="egovframework.let.ass.service.AssetInfoVO">
		UPDATE 
			ASSETSINFO
		   SET 
		   	USAGE_STAUTS = 'U0'
		WHERE ASSET_ID = #{assetId}
	</update>
	 
	 
	 
	<select id="xlsxTrsfAssetList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="egovMap">
		
	    SELECT 
	    	   IFNULL(ORGNZT_ID,'') HIGHER_ORGNZT_ID, 
	    	   IFNULL(LOWER_ORGNZT_ID, '') LOWER_ORGNZT_ID,
	    	   IFNULL(PRJ_ID, '') PRJ_NM,
	    	   IFNULL(MIDDLE_CATEGORY, '') ASSET_MIDDLE_CATEGORY,
	    	   IFNULL(ASSET_QTY, '') ASSET_QTY,
	    	   IFNULL(USE_NM, '') USE_NM,
	    	   IFNULL(RCPT_NM,'') RCPT_NM
		  FROM (
		        SELECT 
					ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC)AS RUM,
					A.ASSET_ID,
					C.CAT_NAME AS LARGE_CATEGORY, 
					D.CAT_NAME AS MIDDLE_CATEGORY,
					A.ASSET_QTY,
					CASE
						WHEN F.ORGNZT_UP IS NULL
						THEN F.ORGNZT_NM
						ELSE G.ORGNZT_NM
					 END AS ORGNZT_ID,
					CASE 
						WHEN F.ORGNZT_UP IS NULL
						THEN NULL
						ELSE F.ORGNZT_NM
					 END AS LOWER_ORGNZT_ID,
	    	   		H.PRJ_NAME AS PRJ_ID,
					DATE_FORMAT(A.REG_DATE,'%Y-%m-%d') AS REG_DATE, 
					E.CODE_NM AS USAGE_STAUTS,
					I.USER_NM AS USE_NM,
					J.USER_NM AS RCPT_NM
				  FROM ASSETSINFO A 
       LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
	   LEFT OUTER JOIN CATEGORY C
				    ON A.LARGE_CATEGORY = C.CAT_ID
	   LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
	   LEFT OUTER JOIN LETTCCMMNDETAILCODE E
				    ON A.USAGE_STAUTS = E.CODE
	   LEFT OUTER JOIN LETTNORGNZTINFO F
	   				ON B.ORGNZT_ID = F.ORGNZT_ID
	   LEFT OUTER JOIN LETTNORGNZTINFO G
	   				ON F.ORGNZT_UP = G.ORGNZT_ID
	   LEFT OUTER JOIN PROJECTS H
	   				ON B.PRJ_ID = H.PRJ_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO I
	                ON B.USE_ID = I.ESNTL_ID
	   LEFT OUTER JOIN LETTNEMPLYRINFO J
	                ON B.RCPT_ID = J.ESNTL_ID  
	             <where>
		               <choose>
		                <when test="searchOrgnzt != null and searchOrgnzt != '' and userId != null and userId != ''">
							AND B.ORGNZT_ID = #{searchOrgnzt}
							<include refid="search" />
							 OR B.ORGNZT_ID = #{searchOrgnzt}
							<include refid="search" />
							 OR F.ORGNZT_UP = #{searchOrgnzt}
							<include refid="search" />
							 OR F.ORGNZT_UP = #{searchOrgnzt}
							<include refid="search" />
		                </when>
		                <when test="searchOrgnzt != null and searchOrgnzt != ''">
		                	AND B.ORGNZT_ID = #{searchOrgnzt}
							<include refid="search" />
							 OR F.ORGNZT_UP = #{searchOrgnzt}
							<include refid="search" />
		                </when>
		                <otherwise>
		                	<include refid="search" />
		                </otherwise>
		               </choose>
				 </where>
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="xlsxTrsfMyAssList" parameterType="egovframework.let.ass.service.AssetManageVO" resultType="egovMap">
	    SELECT IFNULL(MIDDLE_CATEGORY, '') CATEGORY,
	    	   IFNULL(ASSET_QTY, '') ASSET_QTY,
	    	   IFNULL(ASSET_NAME, '') ASSET_NAME,
	    	   IFNULL(ASSET_SN, '') ASSET_SN,
	    	   IFNULL(PRJ_ID, '') PRJ_ID
	      FROM (SELECT ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC)AS RUM,
					   D.CAT_NAME AS MIDDLE_CATEGORY,
					   A.ASSET_QTY,
					   A.ASSET_NAME,
					   A.ASSET_SN,
					   G.PRJ_NAME AS PRJ_ID
				  FROM ASSETSINFO A
	   LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
	   LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
	   LEFT OUTER JOIN PROJECTS G
				    ON B.PRJ_ID = G.PRJ_ID
				 WHERE B.USE_ID = #{userId}
		        <include refid="mySearch" />) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
</mapper>