<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AssetInfoDAO">
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoList">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="usageStatus" column="USAGE_STAUTS" />
		<result property="approval" column="APPROVAL" />
	</resultMap>
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="myAssetList">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="prjId" column="PRJ_ID" />
		<result property="regDate" column="REG_DATE" />
		<result property="usageStatus" column="USAGE_STAUTS" />
		<result property="approval" column="APPROVAL" />
	</resultMap>
	
	<resultMap type="egovframework.let.ass.service.AssetInfoVO"
		id="assetInfoDetail">
		<result property="assetId" column="ASSET_ID" />
		<result property="largeCategory" column="LARGE_CATEGORY" />
		<result property="middleCategory" column="MIDDLE_CATEGORY" />
		<result property="assetName" column="ASSET_NAME" />
		<result property="assetQty" column="ASSET_QTY" />
		<result property="acquiredPrice" column="ACQUIRED_PRICE" />
		<result property="maker" column="MAKER" />
		<result property="note" column="NOTE" />
		<result property="photoId" column="PHOTO_ID" />
		<result property="regId" column="REG_ID" />
		<result property="acquiredDate" column="ACQUIRED_DATE" />
		<result property="assetSn" column="ASSET_SN" />
	</resultMap>

	<sql id="search">
		<where>
			<if test="searchOrgnzt != null and searchOrgnzt != ''">
				AND B.ORGNZT_ID = #{searchOrgnzt}
			</if>
			<if test="searchPrj != null and searchPrj != ''">
				AND B.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="searchStatus != null and searchStatus != ''">
				AND B.HIST_GROUP = #{searchStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND A.ACQUIRED_DATE >= STR_TO_DATE(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND A.ACQUIRED_DATE <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
			<if test="searchWord != null and searchWord != ''">
				AND A.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%')
			</if>
		</where>
	</sql>

	<sql id="mySearch">
			<if test="searchPrj != null and searchPrj != ''">
				AND B.PRJ_ID = #{searchPrj}
			</if>
			<if test="searchLCat != null and searchLCat != ''">
				AND A.LARGE_CATEGORY = #{searchLCat}
			</if>
			<if test="searchdMCat != null and searchdMCat != ''">
				AND A.MIDDLE_CATEGORY = #{searchdMCat}
			</if>
			<if test="startDate != null and startDate != ''">
				AND A.REG_DATE >= STR_TO_DATE(#{startDate},
				'%Y-%m-%d')
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[
				AND A.REG_DATE <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
				]]>
			</if>
			<if test="searchWord != null and searchWord != ''">
				AND A.ASSET_NAME LIKE CONCAT ('%', #{searchWord},'%')
			</if>
	</sql>

	<select id="SelectAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoList">
		
	    SELECT 
	    	   ASSET_ID,
	    	   LARGE_CATEGORY, 
	    	   MIDDLE_CATEGORY, 
	    	   ASSET_NAME, 
	    	   ASSET_QTY, 
	    	   ACQUIRED_DATE,
	    	   ACQUIRED_PRICE,
	    	   MAKER,
	    	   USAGE_STAUTS,
	    	   APPROVAL
	      FROM (
		        SELECT 
					ROW_NUMBER() OVER(ORDER BY A.ACQUIRED_DATE DESC, A.REG_DATE DESC)AS RUM,
					A.ASSET_ID,
					C.CAT_NAME AS LARGE_CATEGORY, 
					D.CAT_NAME AS MIDDLE_CATEGORY,
					A.ASSET_NAME,
					A.ASSET_QTY, 
					DATE_FORMAT(A.ACQUIRED_DATE,'%Y-%m-%d')AS ACQUIRED_DATE, 
					A.ACQUIRED_PRICE, 
					A.MAKER, 
					E.CODE_NM AS USAGE_STAUTS,
					F.CODE_NM AS APPROVAL
				  FROM ASSETSINFO A
				  LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
				  LEFT OUTER JOIN CATEGORY C
				    ON A.LARGE_CATEGORY = C.CAT_ID
				  LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
				  LEFT OUTER JOIN LETTCCMMNDETAILCODE E
				    ON A.USAGE_STAUTS = E.CODE
				  LEFT OUTER JOIN LETTCCMMNDETAILCODE F
				    ON B.APPROVAL = F.CODE
		        	<include refid="search" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountAssetInfoVOList"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="int">
		SELECT 
			COUNT(A.ASSET_ID)
		  FROM ASSETSINFO A
		  LEFT OUTER JOIN ASSETSHIST B
		    ON A.ASSET_ID = B.ASSET_ID
		<include refid="search" />
	</select>
	
	<select id="SelectMyAssetInfoList" parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="myAssetList">
		
	    SELECT 
	    	   ASSET_ID,
	    	   LARGE_CATEGORY, 
	    	   MIDDLE_CATEGORY, 
	    	   ASSET_NAME, 
	    	   ASSET_QTY, 
	    	   PRJ_ID,
	    	   REG_DATE,
	    	   USAGE_STAUTS,
	    	   APPROVAL
	      FROM (
		        SELECT 
					ROW_NUMBER() OVER(ORDER BY A.ACQUIRED_DATE DESC, A.REG_DATE DESC)AS RUM,
					A.ASSET_ID,
					C.CAT_NAME AS LARGE_CATEGORY, 
					D.CAT_NAME AS MIDDLE_CATEGORY,
					A.ASSET_NAME,
					A.ASSET_QTY,
					G.PRJ_NAME AS PRJ_ID,
					DATE_FORMAT(A.REG_DATE,'%Y-%m-%d')AS REG_DATE, 
					E.CODE_NM AS USAGE_STAUTS,
					F.CODE_NM AS APPROVAL
				  FROM ASSETSINFO A
				  LEFT OUTER JOIN ASSETSHIST B
				    ON A.ASSET_ID = B.ASSET_ID
				  LEFT OUTER JOIN CATEGORY C
				    ON A.LARGE_CATEGORY = C.CAT_ID
				  LEFT OUTER JOIN CATEGORY D
				    ON A.MIDDLE_CATEGORY = D.CAT_ID
				  LEFT OUTER JOIN LETTCCMMNDETAILCODE E
				    ON A.USAGE_STAUTS = E.CODE
				  LEFT OUTER JOIN LETTCCMMNDETAILCODE F
				    ON B.APPROVAL = F.CODE
				  LEFT OUTER JOIN PROJECTS G
				    ON B.PRJ_ID = G.PRJ_ID
				 WHERE B.USE_ID = #{userId}
		        	<include refid="mySearch" />
		    ) P 
	    WHERE P.RUM BETWEEN #{first} AND #{last}
	</select>
	
	<select id="CountMyAssetInfoList" parameterType="egovframework.let.ass.service.AssetManageVO"
		resultType="int">
		SELECT 
			COUNT(A.ASSET_ID)
		  FROM ASSETSINFO A
		  LEFT OUTER JOIN ASSETSHIST B
		    ON A.ASSET_ID = B.ASSET_ID
		 WHERE B.USE_ID = #{userId}
		<include refid="mySearch" />
	</select>

	<select id="SelectAssetInfoVO"
		parameterType="egovframework.let.ass.service.AssetManageVO"
		resultMap="assetInfoDetail">
		SELECT 
		    ASSET_ID, 
		    (SELECT CAT_NAME FROM category WHERE CAT_ID = LARGE_CATEGORY) AS LARGE_CATEGORY,
		    (SELECT CAT_NAME FROM category WHERE CAT_ID = MIDDLE_CATEGORY) AS MIDDLE_CATEGORY, 
		    ASSET_NAME,
		    ASSET_QTY,
		    ACQUIRED_PRICE, 
		    MAKER, 
		    ADD_ASSET, 
		    NOTE, 
		    PHOTO_ID, 
		    REG_ID,
		    DATE_FORMAT(ACQUIRED_DATE,'%Y-%m-%d')AS ACQUIRED_DATE
		FROM ASSETSINFO
		WHERE ASSET_ID = #{assetId}
	</select>

	<insert id="InsertAssetInfo"
		parameterType="egovframework.let.ass.service.AssetInfoVO">
	
		INSERT INTO ASSETSINFO (
		    ASSET_ID, 
		    LARGE_CATEGORY, 
		    MIDDLE_CATEGORY, 
		    ASSET_QTY,
		    PHOTO_ID,
		    ASSET_NAME,
		    ASSET_SN,
		    MAKER, 
		    FILE_ID,
		    NOTE,
		    ACQUIRED_DATE, 
		    ACQUIRED_PRICE, 
		    REG_ID, 
		    REG_DATE, 
		    USAGE_STAUTS
		    )
		VALUES (
		    #{assetId},
		    #{largeCategory},
		    #{middleCategory}, 
		    #{assetQty},
		    #{photoId},
		    #{assetName},
		    #{assetSn},
		    #{maker},
		    #{fileId},
		    #{note},
		    NULL,
		    NULL,
		    #{regId},
		    DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
		    #{usageStatus} 
		     )
	</insert>

	<update id="UpdateAssetInfo" parameterType="egovframework.let.ass.service.AssetInfoVO">
		UPDATE 
			ASSETSINFO
		   SET 
		   	LARGE_CATEGORY = #{largeCategory}, 
		   	MIDDLE_CATEGORY = #{middleCategory}, 
		   	ASSET_NAME = #{assetName}, 
		   	ASSET_QTY = #{assetQty}, 
		   	ACQUIRED_DATE = #{acquiredDate}, 
		   	ACQUIRED_PRICE = #{acquiredPrice}, 
		   	MAKER = #{maker}, 
		   	NOTE = #{note}
		   	<if test="photoId != null and photoId != ''">
		   	,PHOTO_ID = #{photoId}
		   	</if>
		 WHERE ASSET_ID = #{assetId}
	</update>
</mapper>